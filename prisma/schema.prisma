generator dbml {
  provider = "prisma-dbml-generator"
}

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider     = "prisma-json-types-generator"
  namespace    = "PrismaJson"
  allowAny     = "false"
  useType      = "PrismaJson.GlobalType"
  clientOutput = "finds automatically"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @default(cuid())
  name               String
  npm                String              @unique
  alamat             String?
  semester           String?
  phone              String?             @unique
  email              String              @unique
  emailVerified      DateTime?
  password           String
  role               Role                @default(MAHASISWA)
  prodiId            String?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now()) @updatedAt
  token              String?             @unique
  isActive           Boolean             @default(false)
  ActivityLog        ActivityLog[]
  Buku               Buku[]
  notification       Notification[]
  PatenAndHakiTable  PatenAndHakiTable[]
  PengajuanBeasiswa  PengajuanBeasiswa[]
  prestasiDataTables PengajuanOnUsers[]
  prodi              MasterDataProdi?    @relation(fields: [prodiId], references: [id])
}

model MasterDataBeasiswa {
  id               String @id @default(cuid())
  syarat           String
  /// [FileResponse]
  templateFormulir Json?
}

model Dosen {
  id                String              @id @default(cuid())
  name              String
  nidn              String
  prodiId           String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now()) @updatedAt
  prodi             MasterDataProdi?    @relation(fields: [prodiId], references: [id])
  PengajuanOnUsers  PengajuanOnUsers[]
  PengajuanPKM      PengajuanPKM[]
  prestasiDataTable PrestasiDataTable[]
}

model MasterDataFakultas {
  id        String            @id @default(cuid())
  name      String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now()) @updatedAt
  prodi     MasterDataProdi[]
}

model MasterDataProdi {
  id         String             @id @default(cuid())
  name       String
  fakultasId String
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @default(now()) @updatedAt
  Dosen      Dosen[]
  Fakultas   MasterDataFakultas @relation(fields: [fakultasId], references: [id])
  user       User[]
}

model MasterDataOrkem {
  id                String              @id @default(cuid())
  name              String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now()) @updatedAt
  PrestasiDataTable PrestasiDataTable[]
}

model MasterDataTingkatKejuaraan {
  id                String              @id @default(cuid())
  name              String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now()) @updatedAt
  PrestasiDataTable PrestasiDataTable[]
}

model MasterDataTingkatPrestasi {
  id                String              @id @default(cuid())
  name              String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now()) @updatedAt
  PrestasiDataTable PrestasiDataTable[]
}

model DokumenSKMeta {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  nomorSK   String
  tanggalSK DateTime

  /// [FileResponse]
  dokumenSK         Json?
  PrestasiDataTable PrestasiDataTable[]
  PengajuanPKM      PengajuanPKM[]
  Buku              Buku[]
}

model LampiranData {
  id                  String              @id @default(cuid())
  /// [FileResponse]
  piagamPenghargaan   Json?
  /// [FileResponse]
  fotoPenyerahanPiala Json?
  /// [FileResponse]
  undanganKejuaraan   Json?
  /// [FileResponse]
  dokumenPendukung    Json?
  PrestasiDataTable   PrestasiDataTable[]
}

/// ==== PENGAJUAN PRESTASI TABLE === ///
model PrestasiDataTable {
  id                 String                     @id @default(cuid())
  kegiatan           String
  tanggalKegiatan    DateTime
  penyelenggara      String?
  createdAt          DateTime?                  @default(now())
  orkemId            String?
  createdById        String
  tingkatKejuaraanId String
  tingkatPrestasiId  String
  dosenId            String
  lampiranId         String
  updatedAt          DateTime                   @default(now()) @updatedAt
  status             String                     @default("Sedang Diproses")
  suratKeputusanId   String
  activityLog        ActivityLog[]
  users              PengajuanOnUsers[]
  dosen              Dosen                      @relation(fields: [dosenId], references: [id])
  suratKeputusan     DokumenSKMeta              @relation(fields: [suratKeputusanId], references: [id])
  lampiran           LampiranData               @relation(fields: [lampiranId], references: [id])
  orkem              MasterDataOrkem?           @relation(fields: [orkemId], references: [id])
  tingkatKejuaraan   MasterDataTingkatKejuaraan @relation(fields: [tingkatKejuaraanId], references: [id])
  tingkatPrestasi    MasterDataTingkatPrestasi  @relation(fields: [tingkatPrestasiId], references: [id])
}

model PengajuanOnUsers {
  userId                       String
  dosenId                      String?
  prestasiDataTableId          String?
  PengajuanPKMId               String?
  PengajuanPatenAndHakiTableId String?
  keterangan                   String             @default("Ketua Tim")
  id                           String             @id @default(cuid())
  createdAt                    DateTime           @default(now())
  PengajuanPKM                 PengajuanPKM?      @relation(fields: [PengajuanPKMId], references: [id])
  PengajuanPatenAndHakiTable   PatenAndHakiTable? @relation(fields: [PengajuanPatenAndHakiTableId], references: [id])
  dosen                        Dosen?             @relation(fields: [dosenId], references: [id])
  PrestasiDataTable            PrestasiDataTable? @relation(fields: [prestasiDataTableId], references: [id])
  user                         User               @relation(fields: [userId], references: [id])
}

/// === PENGAJUAN NEW FEATURE TABLE === ///
model PengajuanPKM {
  id               String             @id @default(cuid())
  judul            String
  deskripsi        String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
  totalAnggaran    BigInt?
  dosenId          String
  status           String             @default("Sedang Diproses")
  tanggalKegiatan  DateTime
  /// [FileResponse]
  dokumenProposal  Json?
  suratKeputusanId String
  suratKeputusan   DokumenSKMeta      @relation(fields: [suratKeputusanId], references: [id])
  activityLog      ActivityLog[]
  users            PengajuanOnUsers[]
  dosen            Dosen              @relation(fields: [dosenId], references: [id])
}

model PengajuanBeasiswa {
  id          String        @id @default(cuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
  status      String        @default("Sedang Diproses")
  /// [FileResponse]
  dokumen     Json?
  userId      String
  description String
  ActivityLog ActivityLog[]
  user        User          @relation(fields: [userId], references: [id])
}

model SKRektor {
  id         String   @id @default(cuid())
  nomorSK    String
  judul      String
  tanggal    DateTime
  keterangan String
  lampiran   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

/// === PENGAJUAN LUARAN TABLE === ///
model PatenAndHakiTable {
  id               String             @id @default(cuid())
  judul            String
  nomorPaten       String?
  expiredDate      DateTime?
  createdAt        DateTime           @default(now())
  keterangan       String
  jenis            PatenAndHaki       @default(HAKI)
  updatedAt        DateTime           @default(now()) @updatedAt
  createdById      String
  /// [FileResponse]
  dokumenPendukung Json?
  status           String             @default("Sedang Diproses")
  /// [FileResponse]
  dokumenTambahan  Json?
  /// [UserInfoType]
  dosen            Json?
  ActivityLog      ActivityLog[]
  user             User               @relation(fields: [createdById], references: [id])
  PengajuanOnUsers PengajuanOnUsers[]
}

model Buku {
  id               String        @id @default(cuid())
  tahunTerbit      DateTime?
  jumlahEksemplar  String
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now()) @updatedAt
  userId           String
  status           String        @default("Sedang Diproses")
  /// [FileResponse]
  dokumenPendukung Json?
  suratKeputusanId String
  suratKeputusan   DokumenSKMeta @relation(fields: [suratKeputusanId], references: [id])
  judulBuku        String
  nomorISBN        String?
  penerbit         String
  pengarang        String
  penulis          String
  temp             String?
  ActivityLog      ActivityLog[]
  user             User          @relation(fields: [userId], references: [id])
}

model NotifMessage {
  id                  String         @id @default(cuid())
  status              String
  module              String
  moduleId            String
  description         String
  forUserMessage      String?
  forAdminMessage     String?
  createdAt           DateTime       @default(now())
  prestasiDataTableId String?
  catatan             String?
  actionByAdminId     String?
  actionByMahasiswaId String
  /// [UserInfoType]
  userInfo            Json[]
  Notification        Notification[]
}

model Notification {
  id                    String       @id @default(cuid())
  readed                Boolean      @default(false)
  notificationMessageId String
  userId                String
  createdAt             DateTime     @default(now())
  activityLogId         String
  notificationMessage   NotifMessage @relation(fields: [notificationMessageId], references: [id])
  User                  User         @relation(fields: [userId], references: [id])
}

model ActivityLog {
  id                  String             @id @default(cuid())
  userId              String
  createdAt           DateTime           @default(now())
  status              String             @default("Diajukan")
  catatan             String?
  prestasiDataTableId String?
  pengajuanBeasiswaId String?
  patenAndHakiTableId String?
  pengajuanPKMId      String?
  bukuId              String?
  Buku                Buku?              @relation(fields: [bukuId], references: [id])
  PatenAndHakiTable   PatenAndHakiTable? @relation(fields: [patenAndHakiTableId], references: [id])
  PengajuanBeasiswa   PengajuanBeasiswa? @relation(fields: [pengajuanBeasiswaId], references: [id])
  PengajuanPKM        PengajuanPKM?      @relation(fields: [pengajuanPKMId], references: [id])
  PrestasiDataTable   PrestasiDataTable? @relation(fields: [prestasiDataTableId], references: [id])
  User                User               @relation(fields: [userId], references: [id])
}

enum Role {
  MAHASISWA
  ADMIN
}

enum PatenAndHaki {
  PATEN
  HAKI
}
